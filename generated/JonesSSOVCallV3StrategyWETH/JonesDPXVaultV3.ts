// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Deposit extends ethereum.Event {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get assets(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get shares(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class EpochEnded extends ethereum.Event {
  get params(): EpochEnded__Params {
    return new EpochEnded__Params(this);
  }
}

export class EpochEnded__Params {
  _event: EpochEnded;

  constructor(event: EpochEnded) {
    this._event = event;
  }

  get _timestamp(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _assetBalance(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _shareSupply(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class EpochStarted extends ethereum.Event {
  get params(): EpochStarted__Params {
    return new EpochStarted__Params(this);
  }
}

export class EpochStarted__Params {
  _event: EpochStarted;

  constructor(event: EpochStarted) {
    this._event = event;
  }

  get _timestamp(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _assetBalance(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _shareSupply(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Snapshot extends ethereum.Event {
  get params(): Snapshot__Params {
    return new Snapshot__Params(this);
  }
}

export class Snapshot__Params {
  _event: Snapshot;

  constructor(event: Snapshot) {
    this._event = event;
  }

  get _timestamp(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _vaultBalance(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _jonesAssetSupply(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Stake extends ethereum.Event {
  get params(): Stake__Params {
    return new Stake__Params(this);
  }
}

export class Stake__Params {
  _event: Stake;

  constructor(event: Stake) {
    this._event = event;
  }

  get _governor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Unstake extends ethereum.Event {
  get params(): Unstake__Params {
    return new Unstake__Params(this);
  }
}

export class Unstake__Params {
  _event: Unstake;

  constructor(event: Unstake) {
    this._event = event;
  }

  get _governor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _claimRewards(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get receiver(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get assets(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get shares(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class JonesDPXVaultV3 extends ethereum.SmartContract {
  static bind(address: Address): JonesDPXVaultV3 {
    return new JonesDPXVaultV3("JonesDPXVaultV3", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  GOVERNOR(): Bytes {
    let result = super.call("GOVERNOR", "GOVERNOR():(bytes32)", []);

    return result[0].toBytes();
  }

  try_GOVERNOR(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("GOVERNOR", "GOVERNOR():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  KEEPER(): Bytes {
    let result = super.call("KEEPER", "KEEPER():(bytes32)", []);

    return result[0].toBytes();
  }

  try_KEEPER(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("KEEPER", "KEEPER():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  STRATEGIES(): Bytes {
    let result = super.call("STRATEGIES", "STRATEGIES():(bytes32)", []);

    return result[0].toBytes();
  }

  try_STRATEGIES(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("STRATEGIES", "STRATEGIES():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  asset(): Address {
    let result = super.call("asset", "asset():(address)", []);

    return result[0].toAddress();
  }

  try_asset(): ethereum.CallResult<Address> {
    let result = super.tryCall("asset", "asset():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  chargeFees(): boolean {
    let result = super.call("chargeFees", "chargeFees():(bool)", []);

    return result[0].toBoolean();
  }

  try_chargeFees(): ethereum.CallResult<boolean> {
    let result = super.tryCall("chargeFees", "chargeFees():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  convertToAssets(_shares: BigInt): BigInt {
    let result = super.call(
      "convertToAssets",
      "convertToAssets(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_shares)]
    );

    return result[0].toBigInt();
  }

  try_convertToAssets(_shares: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "convertToAssets",
      "convertToAssets(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_shares)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  convertToShares(_assets: BigInt): BigInt {
    let result = super.call(
      "convertToShares",
      "convertToShares(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_assets)]
    );

    return result[0].toBigInt();
  }

  try_convertToShares(_assets: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "convertToShares",
      "convertToShares(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_assets)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  deposit(_assets: BigInt, _receiver: Address): BigInt {
    let result = super.call("deposit", "deposit(uint256,address):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_assets),
      ethereum.Value.fromAddress(_receiver)
    ]);

    return result[0].toBigInt();
  }

  try_deposit(
    _assets: BigInt,
    _receiver: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "deposit",
      "deposit(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_assets),
        ethereum.Value.fromAddress(_receiver)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  feeDistributor(): Address {
    let result = super.call("feeDistributor", "feeDistributor():(address)", []);

    return result[0].toAddress();
  }

  try_feeDistributor(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "feeDistributor",
      "feeDistributor():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  maxDeposit(param0: Address): BigInt {
    let result = super.call("maxDeposit", "maxDeposit(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_maxDeposit(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxDeposit", "maxDeposit(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxMint(param0: Address): BigInt {
    let result = super.call("maxMint", "maxMint(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_maxMint(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxMint", "maxMint(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxRedeem(_owner: Address): BigInt {
    let result = super.call("maxRedeem", "maxRedeem(address):(uint256)", [
      ethereum.Value.fromAddress(_owner)
    ]);

    return result[0].toBigInt();
  }

  try_maxRedeem(_owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxRedeem", "maxRedeem(address):(uint256)", [
      ethereum.Value.fromAddress(_owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxWithdraw(_owner: Address): BigInt {
    let result = super.call("maxWithdraw", "maxWithdraw(address):(uint256)", [
      ethereum.Value.fromAddress(_owner)
    ]);

    return result[0].toBigInt();
  }

  try_maxWithdraw(_owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxWithdraw",
      "maxWithdraw(address):(uint256)",
      [ethereum.Value.fromAddress(_owner)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  mint(_shares: BigInt, _receiver: Address): BigInt {
    let result = super.call("mint", "mint(uint256,address):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_shares),
      ethereum.Value.fromAddress(_receiver)
    ]);

    return result[0].toBigInt();
  }

  try_mint(_shares: BigInt, _receiver: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("mint", "mint(uint256,address):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_shares),
      ethereum.Value.fromAddress(_receiver)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  previewDeposit(_assets: BigInt): BigInt {
    let result = super.call(
      "previewDeposit",
      "previewDeposit(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_assets)]
    );

    return result[0].toBigInt();
  }

  try_previewDeposit(_assets: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "previewDeposit",
      "previewDeposit(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_assets)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  previewMint(_shares: BigInt): BigInt {
    let result = super.call("previewMint", "previewMint(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_shares)
    ]);

    return result[0].toBigInt();
  }

  try_previewMint(_shares: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "previewMint",
      "previewMint(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_shares)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  previewRedeem(_shares: BigInt): BigInt {
    let result = super.call(
      "previewRedeem",
      "previewRedeem(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_shares)]
    );

    return result[0].toBigInt();
  }

  try_previewRedeem(_shares: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "previewRedeem",
      "previewRedeem(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_shares)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  previewWithdraw(_assets: BigInt): BigInt {
    let result = super.call(
      "previewWithdraw",
      "previewWithdraw(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_assets)]
    );

    return result[0].toBigInt();
  }

  try_previewWithdraw(_assets: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "previewWithdraw",
      "previewWithdraw(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_assets)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  redeem(_shares: BigInt, _receiver: Address, param2: Address): BigInt {
    let result = super.call(
      "redeem",
      "redeem(uint256,address,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_shares),
        ethereum.Value.fromAddress(_receiver),
        ethereum.Value.fromAddress(param2)
      ]
    );

    return result[0].toBigInt();
  }

  try_redeem(
    _shares: BigInt,
    _receiver: Address,
    param2: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "redeem",
      "redeem(uint256,address,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_shares),
        ethereum.Value.fromAddress(_receiver),
        ethereum.Value.fromAddress(param2)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  rewardsTolerance(): BigInt {
    let result = super.call(
      "rewardsTolerance",
      "rewardsTolerance():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_rewardsTolerance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "rewardsTolerance",
      "rewardsTolerance():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  share(): Address {
    let result = super.call("share", "share():(address)", []);

    return result[0].toAddress();
  }

  try_share(): ethereum.CallResult<Address> {
    let result = super.tryCall("share", "share():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  snapshotAssetBalance(): BigInt {
    let result = super.call(
      "snapshotAssetBalance",
      "snapshotAssetBalance():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_snapshotAssetBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "snapshotAssetBalance",
      "snapshotAssetBalance():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  snapshotSharesSupply(): BigInt {
    let result = super.call(
      "snapshotSharesSupply",
      "snapshotSharesSupply():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_snapshotSharesSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "snapshotSharesSupply",
      "snapshotSharesSupply():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  state(): i32 {
    let result = super.call("state", "state():(uint8)", []);

    return result[0].toI32();
  }

  try_state(): ethereum.CallResult<i32> {
    let result = super.tryCall("state", "state():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  totalAssets(): BigInt {
    let result = super.call("totalAssets", "totalAssets():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalAssets(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalAssets", "totalAssets():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  vaultCap(): BigInt {
    let result = super.call("vaultCap", "vaultCap():(uint256)", []);

    return result[0].toBigInt();
  }

  try_vaultCap(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("vaultCap", "vaultCap():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  whitelistedContract(param0: Address): boolean {
    let result = super.call(
      "whitelistedContract",
      "whitelistedContract(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_whitelistedContract(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "whitelistedContract",
      "whitelistedContract(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  withdraw(_assets: BigInt, _receiver: Address, param2: Address): BigInt {
    let result = super.call(
      "withdraw",
      "withdraw(uint256,address,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_assets),
        ethereum.Value.fromAddress(_receiver),
        ethereum.Value.fromAddress(param2)
      ]
    );

    return result[0].toBigInt();
  }

  try_withdraw(
    _assets: BigInt,
    _receiver: Address,
    param2: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "withdraw",
      "withdraw(uint256,address,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_assets),
        ethereum.Value.fromAddress(_receiver),
        ethereum.Value.fromAddress(param2)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _asset(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _share(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _governor(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _feeDistributor(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _vaultCap(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddContractAddressToWhitelistCall extends ethereum.Call {
  get inputs(): AddContractAddressToWhitelistCall__Inputs {
    return new AddContractAddressToWhitelistCall__Inputs(this);
  }

  get outputs(): AddContractAddressToWhitelistCall__Outputs {
    return new AddContractAddressToWhitelistCall__Outputs(this);
  }
}

export class AddContractAddressToWhitelistCall__Inputs {
  _call: AddContractAddressToWhitelistCall;

  constructor(call: AddContractAddressToWhitelistCall) {
    this._call = call;
  }

  get _contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddContractAddressToWhitelistCall__Outputs {
  _call: AddContractAddressToWhitelistCall;

  constructor(call: AddContractAddressToWhitelistCall) {
    this._call = call;
  }
}

export class CloseManagementWindowCall extends ethereum.Call {
  get inputs(): CloseManagementWindowCall__Inputs {
    return new CloseManagementWindowCall__Inputs(this);
  }

  get outputs(): CloseManagementWindowCall__Outputs {
    return new CloseManagementWindowCall__Outputs(this);
  }
}

export class CloseManagementWindowCall__Inputs {
  _call: CloseManagementWindowCall;

  constructor(call: CloseManagementWindowCall) {
    this._call = call;
  }
}

export class CloseManagementWindowCall__Outputs {
  _call: CloseManagementWindowCall;

  constructor(call: CloseManagementWindowCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get _assets(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _receiver(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get shares(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class DepositStrategyFundsCall extends ethereum.Call {
  get inputs(): DepositStrategyFundsCall__Inputs {
    return new DepositStrategyFundsCall__Inputs(this);
  }

  get outputs(): DepositStrategyFundsCall__Outputs {
    return new DepositStrategyFundsCall__Outputs(this);
  }
}

export class DepositStrategyFundsCall__Inputs {
  _call: DepositStrategyFundsCall;

  constructor(call: DepositStrategyFundsCall) {
    this._call = call;
  }

  get _assets(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DepositStrategyFundsCall__Outputs {
  _call: DepositStrategyFundsCall;

  constructor(call: DepositStrategyFundsCall) {
    this._call = call;
  }
}

export class GrantKeeperRoleCall extends ethereum.Call {
  get inputs(): GrantKeeperRoleCall__Inputs {
    return new GrantKeeperRoleCall__Inputs(this);
  }

  get outputs(): GrantKeeperRoleCall__Outputs {
    return new GrantKeeperRoleCall__Outputs(this);
  }
}

export class GrantKeeperRoleCall__Inputs {
  _call: GrantKeeperRoleCall;

  constructor(call: GrantKeeperRoleCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class GrantKeeperRoleCall__Outputs {
  _call: GrantKeeperRoleCall;

  constructor(call: GrantKeeperRoleCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitialRunCall extends ethereum.Call {
  get inputs(): InitialRunCall__Inputs {
    return new InitialRunCall__Inputs(this);
  }

  get outputs(): InitialRunCall__Outputs {
    return new InitialRunCall__Outputs(this);
  }
}

export class InitialRunCall__Inputs {
  _call: InitialRunCall;

  constructor(call: InitialRunCall) {
    this._call = call;
  }

  get _snapshotAssetBalance(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _snapshotSharesSupply(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class InitialRunCall__Outputs {
  _call: InitialRunCall;

  constructor(call: InitialRunCall) {
    this._call = call;
  }
}

export class MigrateCall extends ethereum.Call {
  get inputs(): MigrateCall__Inputs {
    return new MigrateCall__Inputs(this);
  }

  get outputs(): MigrateCall__Outputs {
    return new MigrateCall__Outputs(this);
  }
}

export class MigrateCall__Inputs {
  _call: MigrateCall;

  constructor(call: MigrateCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokens(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class MigrateCall__Outputs {
  _call: MigrateCall;

  constructor(call: MigrateCall) {
    this._call = call;
  }
}

export class MintCall extends ethereum.Call {
  get inputs(): MintCall__Inputs {
    return new MintCall__Inputs(this);
  }

  get outputs(): MintCall__Outputs {
    return new MintCall__Outputs(this);
  }
}

export class MintCall__Inputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get _shares(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _receiver(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class MintCall__Outputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get assets(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class OpenManagementWindowCall extends ethereum.Call {
  get inputs(): OpenManagementWindowCall__Inputs {
    return new OpenManagementWindowCall__Inputs(this);
  }

  get outputs(): OpenManagementWindowCall__Outputs {
    return new OpenManagementWindowCall__Outputs(this);
  }
}

export class OpenManagementWindowCall__Inputs {
  _call: OpenManagementWindowCall;

  constructor(call: OpenManagementWindowCall) {
    this._call = call;
  }
}

export class OpenManagementWindowCall__Outputs {
  _call: OpenManagementWindowCall;

  constructor(call: OpenManagementWindowCall) {
    this._call = call;
  }
}

export class PullCall extends ethereum.Call {
  get inputs(): PullCall__Inputs {
    return new PullCall__Inputs(this);
  }

  get outputs(): PullCall__Outputs {
    return new PullCall__Outputs(this);
  }
}

export class PullCall__Inputs {
  _call: PullCall;

  constructor(call: PullCall) {
    this._call = call;
  }

  get _assets(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class PullCall__Outputs {
  _call: PullCall;

  constructor(call: PullCall) {
    this._call = call;
  }
}

export class RedeemCall extends ethereum.Call {
  get inputs(): RedeemCall__Inputs {
    return new RedeemCall__Inputs(this);
  }

  get outputs(): RedeemCall__Outputs {
    return new RedeemCall__Outputs(this);
  }
}

export class RedeemCall__Inputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }

  get _shares(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _receiver(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value2(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class RedeemCall__Outputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }

  get assets(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RemoveContractAddressFromWhitelistCall extends ethereum.Call {
  get inputs(): RemoveContractAddressFromWhitelistCall__Inputs {
    return new RemoveContractAddressFromWhitelistCall__Inputs(this);
  }

  get outputs(): RemoveContractAddressFromWhitelistCall__Outputs {
    return new RemoveContractAddressFromWhitelistCall__Outputs(this);
  }
}

export class RemoveContractAddressFromWhitelistCall__Inputs {
  _call: RemoveContractAddressFromWhitelistCall;

  constructor(call: RemoveContractAddressFromWhitelistCall) {
    this._call = call;
  }

  get _contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveContractAddressFromWhitelistCall__Outputs {
  _call: RemoveContractAddressFromWhitelistCall;

  constructor(call: RemoveContractAddressFromWhitelistCall) {
    this._call = call;
  }
}

export class RemoveStrategyFromWhitelistCall extends ethereum.Call {
  get inputs(): RemoveStrategyFromWhitelistCall__Inputs {
    return new RemoveStrategyFromWhitelistCall__Inputs(this);
  }

  get outputs(): RemoveStrategyFromWhitelistCall__Outputs {
    return new RemoveStrategyFromWhitelistCall__Outputs(this);
  }
}

export class RemoveStrategyFromWhitelistCall__Inputs {
  _call: RemoveStrategyFromWhitelistCall;

  constructor(call: RemoveStrategyFromWhitelistCall) {
    this._call = call;
  }

  get _strategyAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveStrategyFromWhitelistCall__Outputs {
  _call: RemoveStrategyFromWhitelistCall;

  constructor(call: RemoveStrategyFromWhitelistCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeKeeperRoleCall extends ethereum.Call {
  get inputs(): RevokeKeeperRoleCall__Inputs {
    return new RevokeKeeperRoleCall__Inputs(this);
  }

  get outputs(): RevokeKeeperRoleCall__Outputs {
    return new RevokeKeeperRoleCall__Outputs(this);
  }
}

export class RevokeKeeperRoleCall__Inputs {
  _call: RevokeKeeperRoleCall;

  constructor(call: RevokeKeeperRoleCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RevokeKeeperRoleCall__Outputs {
  _call: RevokeKeeperRoleCall;

  constructor(call: RevokeKeeperRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SellRewardsCall extends ethereum.Call {
  get inputs(): SellRewardsCall__Inputs {
    return new SellRewardsCall__Inputs(this);
  }

  get outputs(): SellRewardsCall__Outputs {
    return new SellRewardsCall__Outputs(this);
  }
}

export class SellRewardsCall__Inputs {
  _call: SellRewardsCall;

  constructor(call: SellRewardsCall) {
    this._call = call;
  }

  get _minOutputAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SellRewardsCall__Outputs {
  _call: SellRewardsCall;

  constructor(call: SellRewardsCall) {
    this._call = call;
  }
}

export class SetChargeFeesCall extends ethereum.Call {
  get inputs(): SetChargeFeesCall__Inputs {
    return new SetChargeFeesCall__Inputs(this);
  }

  get outputs(): SetChargeFeesCall__Outputs {
    return new SetChargeFeesCall__Outputs(this);
  }
}

export class SetChargeFeesCall__Inputs {
  _call: SetChargeFeesCall;

  constructor(call: SetChargeFeesCall) {
    this._call = call;
  }

  get _status(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetChargeFeesCall__Outputs {
  _call: SetChargeFeesCall;

  constructor(call: SetChargeFeesCall) {
    this._call = call;
  }
}

export class SetFeeDistributorCall extends ethereum.Call {
  get inputs(): SetFeeDistributorCall__Inputs {
    return new SetFeeDistributorCall__Inputs(this);
  }

  get outputs(): SetFeeDistributorCall__Outputs {
    return new SetFeeDistributorCall__Outputs(this);
  }
}

export class SetFeeDistributorCall__Inputs {
  _call: SetFeeDistributorCall;

  constructor(call: SetFeeDistributorCall) {
    this._call = call;
  }

  get _feeDistributor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFeeDistributorCall__Outputs {
  _call: SetFeeDistributorCall;

  constructor(call: SetFeeDistributorCall) {
    this._call = call;
  }
}

export class SetVaultCapCall extends ethereum.Call {
  get inputs(): SetVaultCapCall__Inputs {
    return new SetVaultCapCall__Inputs(this);
  }

  get outputs(): SetVaultCapCall__Outputs {
    return new SetVaultCapCall__Outputs(this);
  }
}

export class SetVaultCapCall__Inputs {
  _call: SetVaultCapCall;

  constructor(call: SetVaultCapCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetVaultCapCall__Outputs {
  _call: SetVaultCapCall;

  constructor(call: SetVaultCapCall) {
    this._call = call;
  }
}

export class StakeCall extends ethereum.Call {
  get inputs(): StakeCall__Inputs {
    return new StakeCall__Inputs(this);
  }

  get outputs(): StakeCall__Outputs {
    return new StakeCall__Outputs(this);
  }
}

export class StakeCall__Inputs {
  _call: StakeCall;

  constructor(call: StakeCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class StakeCall__Outputs {
  _call: StakeCall;

  constructor(call: StakeCall) {
    this._call = call;
  }
}

export class StakeAllCall extends ethereum.Call {
  get inputs(): StakeAllCall__Inputs {
    return new StakeAllCall__Inputs(this);
  }

  get outputs(): StakeAllCall__Outputs {
    return new StakeAllCall__Outputs(this);
  }
}

export class StakeAllCall__Inputs {
  _call: StakeAllCall;

  constructor(call: StakeAllCall) {
    this._call = call;
  }
}

export class StakeAllCall__Outputs {
  _call: StakeAllCall;

  constructor(call: StakeAllCall) {
    this._call = call;
  }
}

export class UnstakeCall extends ethereum.Call {
  get inputs(): UnstakeCall__Inputs {
    return new UnstakeCall__Inputs(this);
  }

  get outputs(): UnstakeCall__Outputs {
    return new UnstakeCall__Outputs(this);
  }
}

export class UnstakeCall__Inputs {
  _call: UnstakeCall;

  constructor(call: UnstakeCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _claimRewards(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class UnstakeCall__Outputs {
  _call: UnstakeCall;

  constructor(call: UnstakeCall) {
    this._call = call;
  }
}

export class UnstakeAllCall extends ethereum.Call {
  get inputs(): UnstakeAllCall__Inputs {
    return new UnstakeAllCall__Inputs(this);
  }

  get outputs(): UnstakeAllCall__Outputs {
    return new UnstakeAllCall__Outputs(this);
  }
}

export class UnstakeAllCall__Inputs {
  _call: UnstakeAllCall;

  constructor(call: UnstakeAllCall) {
    this._call = call;
  }
}

export class UnstakeAllCall__Outputs {
  _call: UnstakeAllCall;

  constructor(call: UnstakeAllCall) {
    this._call = call;
  }
}

export class UpdateRewardsToleranceCall extends ethereum.Call {
  get inputs(): UpdateRewardsToleranceCall__Inputs {
    return new UpdateRewardsToleranceCall__Inputs(this);
  }

  get outputs(): UpdateRewardsToleranceCall__Outputs {
    return new UpdateRewardsToleranceCall__Outputs(this);
  }
}

export class UpdateRewardsToleranceCall__Inputs {
  _call: UpdateRewardsToleranceCall;

  constructor(call: UpdateRewardsToleranceCall) {
    this._call = call;
  }

  get _newRewardsTolerance(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateRewardsToleranceCall__Outputs {
  _call: UpdateRewardsToleranceCall;

  constructor(call: UpdateRewardsToleranceCall) {
    this._call = call;
  }
}

export class WhitelistStrategyCall extends ethereum.Call {
  get inputs(): WhitelistStrategyCall__Inputs {
    return new WhitelistStrategyCall__Inputs(this);
  }

  get outputs(): WhitelistStrategyCall__Outputs {
    return new WhitelistStrategyCall__Outputs(this);
  }
}

export class WhitelistStrategyCall__Inputs {
  _call: WhitelistStrategyCall;

  constructor(call: WhitelistStrategyCall) {
    this._call = call;
  }

  get _strategyAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WhitelistStrategyCall__Outputs {
  _call: WhitelistStrategyCall;

  constructor(call: WhitelistStrategyCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get _assets(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _receiver(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value2(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get shares(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}
