// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Borrow extends ethereum.Event {
  get params(): Borrow__Params {
    return new Borrow__Params(this);
  }
}

export class Borrow__Params {
  _event: Borrow;

  constructor(event: Borrow) {
    this._event = event;
  }

  get strategist(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get vault(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get asset(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class FundsMigrated extends ethereum.Event {
  get params(): FundsMigrated__Params {
    return new FundsMigrated__Params(this);
  }
}

export class FundsMigrated__Params {
  _event: FundsMigrated;

  constructor(event: FundsMigrated) {
    this._event = event;
  }

  get governor(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Repay extends ethereum.Event {
  get params(): Repay__Params {
    return new Repay__Params(this);
  }
}

export class Repay__Params {
  _event: Repay;

  constructor(event: Repay) {
    this._event = event;
  }

  get strategist(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get vault(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get asset(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class VaultDetached extends ethereum.Event {
  get params(): VaultDetached__Params {
    return new VaultDetached__Params(this);
  }
}

export class VaultDetached__Params {
  _event: VaultDetached;

  constructor(event: VaultDetached) {
    this._event = event;
  }

  get governor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get vault(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class VaultSet extends ethereum.Event {
  get params(): VaultSet__Params {
    return new VaultSet__Params(this);
  }
}

export class VaultSet__Params {
  _event: VaultSet;

  constructor(event: VaultSet) {
    this._event = event;
  }

  get governor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get vault(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SSOVPurchase extends ethereum.Event {
  get params(): SSOVPurchase__Params {
    return new SSOVPurchase__Params(this);
  }
}

export class SSOVPurchase__Params {
  _event: SSOVPurchase;

  constructor(event: SSOVPurchase) {
    this._event = event;
  }

  get _epoch(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _strikeIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _premium(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _totalFee(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get _token(): Address {
    return this._event.parameters[5].value.toAddress();
  }
}

export class JonesSSOVCallV3Strategy extends ethereum.SmartContract {
  static bind(address: Address): JonesSSOVCallV3Strategy {
    return new JonesSSOVCallV3Strategy("JonesSSOVCallV3Strategy", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  GOVERNOR(): Bytes {
    let result = super.call("GOVERNOR", "GOVERNOR():(bytes32)", []);

    return result[0].toBytes();
  }

  try_GOVERNOR(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("GOVERNOR", "GOVERNOR():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  KEEPER(): Bytes {
    let result = super.call("KEEPER", "KEEPER():(bytes32)", []);

    return result[0].toBytes();
  }

  try_KEEPER(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("KEEPER", "KEEPER():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  SSOV(): Address {
    let result = super.call("SSOV", "SSOV():(address)", []);

    return result[0].toAddress();
  }

  try_SSOV(): ethereum.CallResult<Address> {
    let result = super.tryCall("SSOV", "SSOV():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  SSOVViewer(): Address {
    let result = super.call("SSOVViewer", "SSOVViewer():(address)", []);

    return result[0].toAddress();
  }

  try_SSOVViewer(): ethereum.CallResult<Address> {
    let result = super.tryCall("SSOVViewer", "SSOVViewer():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  asset(): Address {
    let result = super.call("asset", "asset():(address)", []);

    return result[0].toAddress();
  }

  try_asset(): ethereum.CallResult<Address> {
    let result = super.tryCall("asset", "asset():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  depositSSOV(_strikeIndex: BigInt, _amount: BigInt): BigInt {
    let result = super.call(
      "depositSSOV",
      "depositSSOV(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_strikeIndex),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );

    return result[0].toBigInt();
  }

  try_depositSSOV(
    _strikeIndex: BigInt,
    _amount: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "depositSSOV",
      "depositSSOV(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_strikeIndex),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  depositSSOVMultiple(
    _strikeIndices: Array<BigInt>,
    _amounts: Array<BigInt>
  ): boolean {
    let result = super.call(
      "depositSSOVMultiple",
      "depositSSOVMultiple(uint256[],uint256[]):(bool)",
      [
        ethereum.Value.fromUnsignedBigIntArray(_strikeIndices),
        ethereum.Value.fromUnsignedBigIntArray(_amounts)
      ]
    );

    return result[0].toBoolean();
  }

  try_depositSSOVMultiple(
    _strikeIndices: Array<BigInt>,
    _amounts: Array<BigInt>
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "depositSSOVMultiple",
      "depositSSOVMultiple(uint256[],uint256[]):(bool)",
      [
        ethereum.Value.fromUnsignedBigIntArray(_strikeIndices),
        ethereum.Value.fromUnsignedBigIntArray(_amounts)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getUnused(): BigInt {
    let result = super.call("getUnused", "getUnused():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getUnused(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getUnused", "getUnused():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getVault(): Address {
    let result = super.call("getVault", "getVault():(address)", []);

    return result[0].toAddress();
  }

  try_getVault(): ethereum.CallResult<Address> {
    let result = super.tryCall("getVault", "getVault():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isVaultSet(): boolean {
    let result = super.call("isVaultSet", "isVaultSet():(bool)", []);

    return result[0].toBoolean();
  }

  try_isVaultSet(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isVaultSet", "isVaultSet():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  name(): Bytes {
    let result = super.call("name", "name():(bytes32)", []);

    return result[0].toBytes();
  }

  try_name(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("name", "name():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  onERC721Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: Bytes
  ): Bytes {
    let result = super.call(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromBytes(param3)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC721Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromBytes(param3)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  purchaseOption(_strikeIndex: BigInt, _amount: BigInt): boolean {
    let result = super.call(
      "purchaseOption",
      "purchaseOption(uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_strikeIndex),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );

    return result[0].toBoolean();
  }

  try_purchaseOption(
    _strikeIndex: BigInt,
    _amount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "purchaseOption",
      "purchaseOption(uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_strikeIndex),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  router(): Address {
    let result = super.call("router", "router():(address)", []);

    return result[0].toAddress();
  }

  try_router(): ethereum.CallResult<Address> {
    let result = super.tryCall("router", "router():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  settleEpoch(_ssovEpoch: BigInt, _ssovStrikes: Array<BigInt>): boolean {
    let result = super.call(
      "settleEpoch",
      "settleEpoch(uint256,uint256[]):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_ssovEpoch),
        ethereum.Value.fromUnsignedBigIntArray(_ssovStrikes)
      ]
    );

    return result[0].toBoolean();
  }

  try_settleEpoch(
    _ssovEpoch: BigInt,
    _ssovStrikes: Array<BigInt>
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "settleEpoch",
      "settleEpoch(uint256,uint256[]):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_ssovEpoch),
        ethereum.Value.fromUnsignedBigIntArray(_ssovStrikes)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  totalDeposited(): BigInt {
    let result = super.call("totalDeposited", "totalDeposited():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalDeposited(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalDeposited",
      "totalDeposited():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  viewer(): Address {
    let result = super.call("viewer", "viewer():(address)", []);

    return result[0].toAddress();
  }

  try_viewer(): ethereum.CallResult<Address> {
    let result = super.tryCall("viewer", "viewer():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  wETH(): Address {
    let result = super.call("wETH", "wETH():(address)", []);

    return result[0].toAddress();
  }

  try_wETH(): ethereum.CallResult<Address> {
    let result = super.tryCall("wETH", "wETH():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  withdrawEpoch(_epoch: BigInt, _strikes: Array<BigInt>): boolean {
    let result = super.call(
      "withdrawEpoch",
      "withdrawEpoch(uint256,uint256[]):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_epoch),
        ethereum.Value.fromUnsignedBigIntArray(_strikes)
      ]
    );

    return result[0].toBoolean();
  }

  try_withdrawEpoch(
    _epoch: BigInt,
    _strikes: Array<BigInt>
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "withdrawEpoch",
      "withdrawEpoch(uint256,uint256[]):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_epoch),
        ethereum.Value.fromUnsignedBigIntArray(_strikes)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  withdrawTokenId(_tokenId: BigInt): boolean {
    let result = super.call(
      "withdrawTokenId",
      "withdrawTokenId(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return result[0].toBoolean();
  }

  try_withdrawTokenId(_tokenId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "withdrawTokenId",
      "withdrawTokenId(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _name(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _asset(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _SSOV(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _viewer(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _router(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _governor(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class BorrowCall extends ethereum.Call {
  get inputs(): BorrowCall__Inputs {
    return new BorrowCall__Inputs(this);
  }

  get outputs(): BorrowCall__Outputs {
    return new BorrowCall__Outputs(this);
  }
}

export class BorrowCall__Inputs {
  _call: BorrowCall;

  constructor(call: BorrowCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class BorrowCall__Outputs {
  _call: BorrowCall;

  constructor(call: BorrowCall) {
    this._call = call;
  }
}

export class DepositSSOVCall extends ethereum.Call {
  get inputs(): DepositSSOVCall__Inputs {
    return new DepositSSOVCall__Inputs(this);
  }

  get outputs(): DepositSSOVCall__Outputs {
    return new DepositSSOVCall__Outputs(this);
  }
}

export class DepositSSOVCall__Inputs {
  _call: DepositSSOVCall;

  constructor(call: DepositSSOVCall) {
    this._call = call;
  }

  get _strikeIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DepositSSOVCall__Outputs {
  _call: DepositSSOVCall;

  constructor(call: DepositSSOVCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class DepositSSOVMultipleCall extends ethereum.Call {
  get inputs(): DepositSSOVMultipleCall__Inputs {
    return new DepositSSOVMultipleCall__Inputs(this);
  }

  get outputs(): DepositSSOVMultipleCall__Outputs {
    return new DepositSSOVMultipleCall__Outputs(this);
  }
}

export class DepositSSOVMultipleCall__Inputs {
  _call: DepositSSOVMultipleCall;

  constructor(call: DepositSSOVMultipleCall) {
    this._call = call;
  }

  get _strikeIndices(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _amounts(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class DepositSSOVMultipleCall__Outputs {
  _call: DepositSSOVMultipleCall;

  constructor(call: DepositSSOVMultipleCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class DetachCall extends ethereum.Call {
  get inputs(): DetachCall__Inputs {
    return new DetachCall__Inputs(this);
  }

  get outputs(): DetachCall__Outputs {
    return new DetachCall__Outputs(this);
  }
}

export class DetachCall__Inputs {
  _call: DetachCall;

  constructor(call: DetachCall) {
    this._call = call;
  }
}

export class DetachCall__Outputs {
  _call: DetachCall;

  constructor(call: DetachCall) {
    this._call = call;
  }
}

export class GrantKeeperRoleCall extends ethereum.Call {
  get inputs(): GrantKeeperRoleCall__Inputs {
    return new GrantKeeperRoleCall__Inputs(this);
  }

  get outputs(): GrantKeeperRoleCall__Outputs {
    return new GrantKeeperRoleCall__Outputs(this);
  }
}

export class GrantKeeperRoleCall__Inputs {
  _call: GrantKeeperRoleCall;

  constructor(call: GrantKeeperRoleCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class GrantKeeperRoleCall__Outputs {
  _call: GrantKeeperRoleCall;

  constructor(call: GrantKeeperRoleCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class MigrateFundsCall extends ethereum.Call {
  get inputs(): MigrateFundsCall__Inputs {
    return new MigrateFundsCall__Inputs(this);
  }

  get outputs(): MigrateFundsCall__Outputs {
    return new MigrateFundsCall__Outputs(this);
  }
}

export class MigrateFundsCall__Inputs {
  _call: MigrateFundsCall;

  constructor(call: MigrateFundsCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokens(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get _shouldTransferEth(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }

  get _shouldTransferERC721(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }
}

export class MigrateFundsCall__Outputs {
  _call: MigrateFundsCall;

  constructor(call: MigrateFundsCall) {
    this._call = call;
  }
}

export class PurchaseOptionCall extends ethereum.Call {
  get inputs(): PurchaseOptionCall__Inputs {
    return new PurchaseOptionCall__Inputs(this);
  }

  get outputs(): PurchaseOptionCall__Outputs {
    return new PurchaseOptionCall__Outputs(this);
  }
}

export class PurchaseOptionCall__Inputs {
  _call: PurchaseOptionCall;

  constructor(call: PurchaseOptionCall) {
    this._call = call;
  }

  get _strikeIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class PurchaseOptionCall__Outputs {
  _call: PurchaseOptionCall;

  constructor(call: PurchaseOptionCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RepayCall extends ethereum.Call {
  get inputs(): RepayCall__Inputs {
    return new RepayCall__Inputs(this);
  }

  get outputs(): RepayCall__Outputs {
    return new RepayCall__Outputs(this);
  }
}

export class RepayCall__Inputs {
  _call: RepayCall;

  constructor(call: RepayCall) {
    this._call = call;
  }
}

export class RepayCall__Outputs {
  _call: RepayCall;

  constructor(call: RepayCall) {
    this._call = call;
  }
}

export class RevokeKeeperRoleCall extends ethereum.Call {
  get inputs(): RevokeKeeperRoleCall__Inputs {
    return new RevokeKeeperRoleCall__Inputs(this);
  }

  get outputs(): RevokeKeeperRoleCall__Outputs {
    return new RevokeKeeperRoleCall__Outputs(this);
  }
}

export class RevokeKeeperRoleCall__Inputs {
  _call: RevokeKeeperRoleCall;

  constructor(call: RevokeKeeperRoleCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RevokeKeeperRoleCall__Outputs {
  _call: RevokeKeeperRoleCall;

  constructor(call: RevokeKeeperRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SellRewardTokensForBaseTokenCall extends ethereum.Call {
  get inputs(): SellRewardTokensForBaseTokenCall__Inputs {
    return new SellRewardTokensForBaseTokenCall__Inputs(this);
  }

  get outputs(): SellRewardTokensForBaseTokenCall__Outputs {
    return new SellRewardTokensForBaseTokenCall__Outputs(this);
  }
}

export class SellRewardTokensForBaseTokenCall__Inputs {
  _call: SellRewardTokensForBaseTokenCall;

  constructor(call: SellRewardTokensForBaseTokenCall) {
    this._call = call;
  }

  get _rewardTokens(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _minBaseOutputAmounts(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class SellRewardTokensForBaseTokenCall__Outputs {
  _call: SellRewardTokensForBaseTokenCall;

  constructor(call: SellRewardTokensForBaseTokenCall) {
    this._call = call;
  }
}

export class SetVaultCall extends ethereum.Call {
  get inputs(): SetVaultCall__Inputs {
    return new SetVaultCall__Inputs(this);
  }

  get outputs(): SetVaultCall__Outputs {
    return new SetVaultCall__Outputs(this);
  }
}

export class SetVaultCall__Inputs {
  _call: SetVaultCall;

  constructor(call: SetVaultCall) {
    this._call = call;
  }

  get _newVault(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetVaultCall__Outputs {
  _call: SetVaultCall;

  constructor(call: SetVaultCall) {
    this._call = call;
  }
}

export class SettleEpochCall extends ethereum.Call {
  get inputs(): SettleEpochCall__Inputs {
    return new SettleEpochCall__Inputs(this);
  }

  get outputs(): SettleEpochCall__Outputs {
    return new SettleEpochCall__Outputs(this);
  }
}

export class SettleEpochCall__Inputs {
  _call: SettleEpochCall;

  constructor(call: SettleEpochCall) {
    this._call = call;
  }

  get _ssovEpoch(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _ssovStrikes(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class SettleEpochCall__Outputs {
  _call: SettleEpochCall;

  constructor(call: SettleEpochCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class UpdateSSOVAddressCall extends ethereum.Call {
  get inputs(): UpdateSSOVAddressCall__Inputs {
    return new UpdateSSOVAddressCall__Inputs(this);
  }

  get outputs(): UpdateSSOVAddressCall__Outputs {
    return new UpdateSSOVAddressCall__Outputs(this);
  }
}

export class UpdateSSOVAddressCall__Inputs {
  _call: UpdateSSOVAddressCall;

  constructor(call: UpdateSSOVAddressCall) {
    this._call = call;
  }

  get _newSSOV(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateSSOVAddressCall__Outputs {
  _call: UpdateSSOVAddressCall;

  constructor(call: UpdateSSOVAddressCall) {
    this._call = call;
  }
}

export class WithdrawEpochCall extends ethereum.Call {
  get inputs(): WithdrawEpochCall__Inputs {
    return new WithdrawEpochCall__Inputs(this);
  }

  get outputs(): WithdrawEpochCall__Outputs {
    return new WithdrawEpochCall__Outputs(this);
  }
}

export class WithdrawEpochCall__Inputs {
  _call: WithdrawEpochCall;

  constructor(call: WithdrawEpochCall) {
    this._call = call;
  }

  get _epoch(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _strikes(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class WithdrawEpochCall__Outputs {
  _call: WithdrawEpochCall;

  constructor(call: WithdrawEpochCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class WithdrawTokenIdCall extends ethereum.Call {
  get inputs(): WithdrawTokenIdCall__Inputs {
    return new WithdrawTokenIdCall__Inputs(this);
  }

  get outputs(): WithdrawTokenIdCall__Outputs {
    return new WithdrawTokenIdCall__Outputs(this);
  }
}

export class WithdrawTokenIdCall__Inputs {
  _call: WithdrawTokenIdCall;

  constructor(call: WithdrawTokenIdCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawTokenIdCall__Outputs {
  _call: WithdrawTokenIdCall;

  constructor(call: WithdrawTokenIdCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}
