type BorrowStables @entity(immutable: true) {
  id: Bytes!
  _amountBorrowed: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ClaimRewards @entity(immutable: true) {
  id: Bytes!
  _to: Bytes! # address
  _stableAmount: BigInt! # uint256
  _wEthAmount: BigInt! # uint256
  _amountJones: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CompoundGlp @entity(immutable: true) {
  id: Bytes!
  _to: Bytes! # address
  _amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CompoundStables @entity(immutable: true) {
  id: Bytes!
  _to: Bytes! # address
  _amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DepositGlp @entity(immutable: true) {
  id: Bytes!
  _to: Bytes! # address
  _amount: BigInt! # uint256
  _sharesReceived: BigInt! # uint256
  _compound: Boolean! # bool
  blockTimestamp: BigInt!
  blockNumber: BigInt!
  transactionHash: Bytes!
  zapToGlp: Boolean!
  zapTokenAddress: String
  zapTokenAmount: BigInt
  zapToGlpEth: Boolean!
  zapToGlpEthAmount: BigInt
}

type DepositStables @entity(immutable: true) {
  id: Bytes!
  _to: Bytes! # address
  _amount: BigInt! # uint256
  _sharesReceived: BigInt! # uint256
  _compound: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EmergencyPaused @entity(immutable: true) {
  id: Bytes!
  _account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EmergencyUnpaused @entity(immutable: true) {
  id: Bytes!
  _account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EmergencyWithdraw @entity(immutable: true) {
  id: Bytes!
  _to: Bytes! # address
  _amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type GovernorUpdated @entity(immutable: true) {
  id: Bytes!
  _oldGovernor: Bytes! # address
  _newGovernor: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Paused @entity(immutable: true) {
  id: Bytes!
  _account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RedeemGlp @entity(immutable: true) {
  id: Bytes!
  _to: Bytes! # address
  _amount: BigInt! # uint256
  _retentions: BigInt! # uint256
  _ethRetentions: BigInt! # uint256
  _token: Bytes # address
  _ethAmount: BigInt! # uint256
  _compound: Boolean! # bool
  blockTimestamp: BigInt!
  blockNumber: BigInt!
  transactionHash: Bytes!
  redeemGlpBasket: Boolean
  redeemGlpBasketAddress: String
  redeemGlpNative: Boolean
  transactionTestString: String
  redeemAmount: BigInt
}

type RedeemStable @entity(immutable: true) {
  id: Bytes!
  _to: Bytes! # address
  _amount: BigInt! # uint256
  _retentions: BigInt! # uint256
  _realRetentions: BigInt! # uint256
  _compound: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleAdminChanged @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  previousAdminRole: Bytes! # bytes32
  newAdminRole: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleGranted @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  account: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleRevoked @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  account: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Unpaused @entity(immutable: true) {
  id: Bytes!
  _account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type VaultDeposit @entity(immutable: true) {
  id: Bytes!
  vault: Bytes! # address
  _amount: BigInt! # uint256
  _retention: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type unCompoundGlp @entity(immutable: true) {
  id: Bytes!
  _to: Bytes! # address
  _amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type unCompoundStables @entity(immutable: true) {
  id: Bytes!
  _to: Bytes! # address
  _amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type JonesGlpVaultRouterOldBorrowStables @entity(immutable: true) {
  id: Bytes!
  _amountBorrowed: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type JonesGlpVaultRouterOldClaimRewards @entity(immutable: true) {
  id: Bytes!
  _to: Bytes! # address
  _stableAmount: BigInt! # uint256
  _wEthAmount: BigInt! # uint256
  _amountJones: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type JonesGlpVaultRouterOldCompoundGlp @entity(immutable: true) {
  id: Bytes!
  _to: Bytes! # address
  _amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type JonesGlpVaultRouterOldCompoundStables @entity(immutable: true) {
  id: Bytes!
  _to: Bytes! # address
  _amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type JonesGlpVaultRouterOldDepositGlp @entity(immutable: true) {
  id: Bytes!
  _to: Bytes! # address
  _amount: BigInt! # uint256
  _sharesReceived: BigInt! # uint256
  _compound: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type JonesGlpVaultRouterOldDepositStables @entity(immutable: true) {
  id: Bytes!
  _to: Bytes! # address
  _amount: BigInt! # uint256
  _sharesReceived: BigInt! # uint256
  _compound: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type JonesGlpVaultRouterOldEmergencyPaused @entity(immutable: true) {
  id: Bytes!
  _account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type JonesGlpVaultRouterOldEmergencyUnpaused @entity(immutable: true) {
  id: Bytes!
  _account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type JonesGlpVaultRouterOldGovernorUpdated @entity(immutable: true) {
  id: Bytes!
  _oldGovernor: Bytes! # address
  _newGovernor: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type JonesGlpVaultRouterOldPaused @entity(immutable: true) {
  id: Bytes!
  _account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type JonesGlpVaultRouterOldRedeemGlp @entity(immutable: true) {
  id: Bytes!
  _to: Bytes! # address
  _amount: BigInt! # uint256
  _retentions: BigInt! # uint256
  _ethRetentions: BigInt! # uint256
  _compound: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RedeemGlpBasket @entity(immutable: true) {
  id: Bytes!
  _to: Bytes! # address
  _amount: BigInt! # uint256
  _retentions: BigInt! # uint256
  _ethRetentions: BigInt! # uint256
  _token: Bytes! # address
  _compound: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RedeemGlpEth @entity(immutable: true) {
  id: Bytes!
  _to: Bytes! # address
  _amount: BigInt! # uint256
  _retentions: BigInt! # uint256
  _ethRetentions: BigInt! # uint256
  _ethAmount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type JonesGlpVaultRouterOldRedeemStable @entity(immutable: true) {
  id: Bytes!
  _to: Bytes! # address
  _amount: BigInt! # uint256
  _retentions: BigInt! # uint256
  _realRetentions: BigInt! # uint256
  _compound: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RetentionCharged @entity(immutable: true) {
  id: Bytes!
  _retentions: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type JonesGlpVaultRouterOldRoleAdminChanged @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  previousAdminRole: Bytes! # bytes32
  newAdminRole: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type JonesGlpVaultRouterOldRoleGranted @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  account: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type JonesGlpVaultRouterOldRoleRevoked @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  account: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SetJonesLeverageStrategy @entity(immutable: true) {
  id: Bytes!
  _previousADdress: Bytes! # address
  _newAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SetJonesRewards @entity(immutable: true) {
  id: Bytes!
  _previousAddress: Bytes! # address
  _newAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SettleEpoch @entity(immutable: true) {
  id: Bytes!
  _currentEpochTs: BigInt! # uint256
  _targetEpochTs: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type JonesGlpVaultRouterOldUnpaused @entity(immutable: true) {
  id: Bytes!
  _account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateAdapter @entity(immutable: true) {
  id: Bytes!
  _oldAdapter: Bytes! # address
  _newAdapter: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateGlpAddress @entity(immutable: true) {
  id: Bytes!
  _oldGlpAddress: Bytes! # address
  _newGlpAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateGlpCompoundRewards @entity(immutable: true) {
  id: Bytes!
  _oldGlpeCompounder: Bytes! # address
  _newGlpCompounder: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateGlpRewardTracker @entity(immutable: true) {
  id: Bytes!
  _oldGlpTracker: Bytes! # address
  _newGlpTracker: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateGlpVault @entity(immutable: true) {
  id: Bytes!
  _oldGlpVault: Bytes! # address
  _newGlpVault: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateIncentiveReceiver @entity(immutable: true) {
  id: Bytes!
  _oldIncentiveReceiver: Bytes! # address
  _newIncentiveReceiver: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateStableAddress @entity(immutable: true) {
  id: Bytes!
  _oldStableAddress: Bytes! # address
  _newStableAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateStableCompoundRewards @entity(immutable: true) {
  id: Bytes!
  _oldStableCompounder: Bytes! # address
  _newStableCompounder: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateStableRewardTracker @entity(immutable: true) {
  id: Bytes!
  _oldStableTracker: Bytes! # address
  _newStableTracker: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateStableVault @entity(immutable: true) {
  id: Bytes!
  _oldStableVault: Bytes! # address
  _newStableVault: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateWithdrawalRetention @entity(immutable: true) {
  id: Bytes!
  _newRetention: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type JonesGlpVaultRouterOldVaultDeposit @entity(immutable: true) {
  id: Bytes!
  vault: Bytes! # address
  _amount: BigInt! # uint256
  _retention: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type JonesGlpVaultRouterOldunCompoundGlp @entity(immutable: true) {
  id: Bytes!
  _to: Bytes! # address
  _amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type JonesGlpVaultRouterOldunCompoundStables @entity(immutable: true) {
  id: Bytes!
  _to: Bytes! # address
  _amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
